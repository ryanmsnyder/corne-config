/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        HRMR: HRMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 2 3 4 5 1 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            require-prior-idle-ms = <150>;
        };

        HRML: HRML {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 30 31 39 40 41>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp EQUAL      &kp Q             &kp W             &kp F               &kp P                 &kp B                           &kp J                          &kp L                  &kp U                &kp Y              &kp LEFT_BRACKET   &kp RIGHT_BRACKET
&kp MINUS      &HRML LEFT_GUI A  &HRML LEFT_ALT R  &HRML LEFT_SHIFT S  &HRML LEFT_CONTROL T  &HRML LS(LA(LEFT_CONTROL)) G    &HRMR RS(RA(RIGHT_CONTROL)) M  &HRMR RIGHT_CONTROL N  &HRMR RIGHT_SHIFT E  &HRMR RIGHT_ALT I  &HRMR RIGHT_GUI O  &kp SEMICOLON
&kp BACKSLASH  &kp Z             &kp X             &kp C               &kp D                 &kp V                           &kp K                          &kp H                  &kp COMMA            &kp DOT            &kp FSLH           &kp SINGLE_QUOTE
                                                   &kp ESC             &lt 2 DEL             &lt 1 BACKSPACE                 &lt 3 SPACE                    &lt 4 TAB              &kp ENTER
            >;
        };

        nav_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Nav";
            bindings = <
&trans  &trans  &trans  &trans  &trans            &trans    &trans  &trans    &kp UP    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &kp LEFT_CONTROL  &trans    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans            &trans    &trans  &trans    &trans    &trans     &trans  &trans
                        &trans  &trans            &trans    &trans  &trans    &trans
            >;
        };

        num_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &kp N7  &kp N8  &kp N9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &kp N4  &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &kp N1  &kp N2  &kp N3  &trans  &trans
                        &trans  &trans  &trans    &kp NUMBER_0  &trans  &trans
            >;

            label = "Num";
        };

        symbol_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Symbol";
            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&trans     &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans     &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        system_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &bt BT_CLR     &trans       &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans  &bootloader    &bootloader  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans  &sys_reset     &sys_reset   &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans  &trans         &trans       &trans  &trans
            >;

            label = "System";
        };
    };
};
